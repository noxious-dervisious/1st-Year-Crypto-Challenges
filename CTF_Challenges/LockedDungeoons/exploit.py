from pwn import *
from string import printable as chars
from tqdm import *
# from pwnlib.logdd import *
# from trange import *
def exploit():
    io = remote('192.168.43.154',1337)
    cipher_len = 0
    log.warn("Initiating Exploit...")
    io.sendline('')
    cipher = io.recvline().strip()
    prev_len = len(cipher.decode('hex'))
    n = 1
    pt = ''
    while 1 :
        io.sendline('a' * n)
        cipher = io.recvline().strip()
        cipher_len = len(cipher.decode('hex'))
        # print(cipher_len)
        if cipher_len != prev_len :
            cipher_len = (cipher_len -16) - n
            #print(cipher_len)
            log.info("cipher_len: "+str(cipher_len))
            break 
        n += 1
    
    p = log.progress("Starting Attack")
    p.status("Calculated Prefix Lex; Exploiting Service...")
    time.sleep(1)

    # debug chars
    # chars = "".join(map(chr, range(128)))
    for  i in trange (cipher_len):
        io.sendline('a'*(47-i))
        cipher = io.recvline().strip()
        prev_cipher = cipher.decode('hex')
        for j in chars:                 
            io.sendline(j + 'a'*(47-i))
            cipher = io.recvline().strip()
            cur_cipher = cipher.decode('hex')
            if prev_cipher[:cipher_len-1] == cur_cipher[:cipher_len-1]:
                p.status("Cracked byte "+str(i))
                pt += j
                break
        else:
            print('No bytes foound!!')
    
    p.success("Exploited: "+ pt)

exploit()
